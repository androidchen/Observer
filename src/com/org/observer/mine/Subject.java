package com.org.observer.mine;

/**
 * 1.题对象管理某些数据；
 * 2.当主题内的数据改变，就会通知观察者；
 * 3.一旦数据改变，新的数据会以某种方式到达观察者手上；
 * 
 * 4.关于观察者的一切，主题只知道观察者实现了某个接口（Observer），主题不需要知道观察者的具体类是谁，做了什么或者其他任何细节；
 * 5.任何时候我们都可以增加新的观察者，因为主题唯一依赖的东西是一个实现Observer接口的对象列表，所以我们可以随时增加观察者。
 * 	   在运行时也可以用新的观察者取代现有的观察者，主题不会受任何影响，同样可以在任何时候删除某些观察者。
 * 6.有新的类型观察者出现时，主题代码不需要修改。例如有个新的具体类需要当观察者，我们不需要为了兼容新的类而修改主题的代码，
 * 	   所要做的就是在新的类实现观察者接口，然后注册为观察者即可。主题不在乎别的，他只会发送通知给所以实现了观察者接口的对象。
 */
public interface Subject {

	public void registerObserver(Observer obs);

	public void removeObserver(Observer obs);

	public void notifyObservers();

}
